@rendermode InteractiveServer
@using SHVA.Data.Services
@page "/WoningDashBoard"
@attribute [Authorize(Roles = "Admin , Worker")];
@inject WoningService woningService;

<button class="btn btn-primary" @onclick="AddWoning">Add Woning </button>


  @if (TempWoning != null)
  {
    <EditForm Model="TempWoning">
      <label>Name:</label>
      <input type="text" @bind="TempWoning.Name" />
      <label>Description:</label>
      <input type="text" @bind="TempWoning.Description" />
      <label>Type:</label>
      <input type="Type" @bind="TempWoning.Type" />
      <label>Adress:</label>
      <input type="text" @bind="TempWoning.Adress" />
      <label>Image:</label>
      <input type="text" @bind="TempWoning.Image" />
      <label>HuisvestingingAnbieder</label>
      <HuisVestingAanbiederSelector HuisVestingAanbiederSelected="e =>  TempWoning.Huisvestingaanbieder = e" />

      <button class="btn btn-primary" @onclick="WoningManger">Save</button>
    </EditForm>
  }



<table class="table">
  <thead>
    <tr>
      <td scope="col">Id</td>
      <td scope="col">Name</td>
      <td scope="col">Description</td>
      <td scope="col">Type</td>
      <td scope="col">Adress</td>
      <td scope="col">Image</td>
      <td scope="col">HuisvestingingAnbieder</td>
      <td scope="col">Rooms</td>
      <td scope="col">Studenten</td>
      <td scope="col">Edit</td>
      <td scope="col">Delete</td>
    </tr>
  </thead>
  <tbody>
    @foreach (var woning in Woningen)
    {
      <tr>
        <td scope="row">@woning.Id</td>
        <td>@woning.Name</td>
        <td>@woning.Description</td>
        <td>@woning.Type</td>
        <td>@woning.Adress</td>
        <td>@woning.Image</td>
        <td>@woning.Huisvestingaanbieder</td>
        <td>
          <div class="rooms">
            <button class="btn btn-primary">Rooms</button>

          </div>
        </td>
        <td><div class="students"></div></td>
        <td><button @onclick="()=> EditWoning(woning)" class="btn btn-primary"> Edit</button></td>
        <td><button @onclick="()=> DeleteWoning(woning.Id)" class="btn btn-danger"> Delete</button> </td>
      </tr>
    }

  </tbody>
</table>




@code {
  List<Woning> Woningen => woningService.GetWoningen();

  Woning? TempWoning;

  bool IsNewWoning;

  void DeleteWoning(int Id) => woningService.DeleteWoningbyId(Id);

  void WoningManger()
  {
    if (TempWoning != null)
    {
      if (!Woningen.Contains(TempWoning) && IsNewWoning)
      {
        woningService.AddWoning(TempWoning);
      }
      else
      {
        woningService.UpdateWoning(TempWoning);
      }

      TempWoning = null;
    }
  }

  void AddWoning()
  {
    TempWoning = new Woning { Name = "" };
    IsNewWoning = true;
    //openmodal als ik die ooit werkent krijg Fix dit a.u.b Aaron!!!
  }

  void EditWoning(Woning woning)
  {
    TempWoning = woning;
    IsNewWoning = false;
    //openmodal als ik die ooit werkent krijg Fix dit a.u.bAaron!!!
  }


  void OpenRoomModal()
  {
    //  openmodal als ik die ooit werkent krijg Fix dit a.u.bAaron!!!
  }



}
